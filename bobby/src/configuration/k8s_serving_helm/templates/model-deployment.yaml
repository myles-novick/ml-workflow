apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kdeploy.identifier" . }}
  namespace: {{ .Values.k8s.namespace }}
  labels:
    identifier: {{ template "kdeploy.identifier" . }}
{{ include "kdeploy.ownerRef" . | indent 2 }}
spec:
  replicas: {{ .Values.baseReplicas }}
  selector:
    matchLabels:
      identifier: {{ template "kdeploy.identifier" . }}
  template:
    metadata:
      labels:
        identifier: {{ template "kdeploy.identifier" . }}
    spec:
      volumes:
        - name: model
          emptyDir: {}
      initContainers:
        - name: {{ template "kdeploy.identifier" . }}-loader
          env:
            - name: RUN_ID
              value: {{ .Values.model.runId }}
            - name: JOB_ID
              value: {{ .Values.model.jobId }}
            - name: MLFLOW_URL
              value: {{ .Values.k8s.mlflow_url }}
            - name: MODEL_NAME
              value: {{ .Values.model.name }}
{{ include "kdeploy.dbEnvs" . | indent 12}}
          image: splicemachine/sm_k8_model-init:{{ .Values.versions.retriever }}
          volumeMounts:
            - mountPath: "/var/run/model"
              name: model
      containers:
        - name: {{ template "kdeploy.identifier" . }}
          env:
            - name: GUNICORN_CMD_ARGS
              value: "-w {{ .Values.serving.gunicornWorkers }} -b 0.0.0.0:{{ .Values.serving.exposePort }}"
            {{ if eq .Values.serving.disableNginx "true" }}
            - name: DISABLE_NGINX
              value: "true"
            {{ end }}
          imagePullPolicy: Always
          image: splicemachine/sm_k8_model_serving:{{ .Values.versions.server }}
          ports:
            - containerPort: {{ .Values.serving.exposePort }}
              name: {{ .Values.model.runId }}
          resources:
            {{ if eq .Values.resourceRequests.enabled "true" }}
            requests:
              memory: {{ .Values.resourceRequests.memory }}
              cpu: {{ .Values.resourceRequests.cpu }}
            {{ end }}
            {{ if eq .Values.resourceLimits.enabled "true" }}
            limits:
              memory: {{ .Values.resourceLimits.memory }} # choose carefully to avoid OOM, esp with Spark
              cpu: {{ .Values.resourceLimits.cpu }}
            {{ end }}
          volumeMounts:
            - mountPath: "/opt/ml/model"
              name: model
      serviceAccountName: {{ template "kdeploy.identifier" . }}
